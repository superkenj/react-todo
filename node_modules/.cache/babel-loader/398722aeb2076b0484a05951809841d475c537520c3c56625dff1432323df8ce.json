{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\react-todo\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(null); // Prevent incorrect initial render\n  const isFirstRender = useRef(true);\n\n  // ✅ Load todos and user authentication from localStorage\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    const storedUser = sessionStorage.getItem(\"user\");\n    if (storedTodos) {\n      try {\n        const parsedTodos = JSON.parse(storedTodos);\n        if (Array.isArray(parsedTodos)) {\n          setTodos(parsedTodos);\n          console.log(\"Loaded todos:\", parsedTodos);\n        }\n      } catch (error) {\n        console.error(\"Error parsing todos:\", error);\n        setTodos([]);\n      }\n    }\n    setIsAuthenticated(!!storedUser);\n  }, []);\n\n  // ✅ Save todos to localStorage (with initial render check)\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  // ✅ Notifications & Reminders\n  useEffect(() => {\n    // Check if browser supports notifications\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser does not support desktop notification\");\n      return;\n    }\n\n    // Request permission if not already granted\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission().then(permission => {\n        if (permission === \"granted\") {\n          console.log(\"Notification permission granted\");\n        }\n      });\n    }\n    const checkReminders = () => {\n      const now = new Date();\n      todos.forEach(todo => {\n        if (!todo.completed && todo.dueDate) {\n          try {\n            const dueDate = new Date(todo.dueDate);\n            // Show notification if task is due within the next hour or is overdue\n            if (dueDate <= new Date(now.getTime() + 3600000)) {\n              // 3600000ms = 1 hour\n              new Notification(`Todo Reminder: ${todo.title}`, {\n                body: `Due: ${dueDate.toLocaleString()}\\nCategory: ${todo.category || 'No category'}`,\n                icon: \"/todo-icon.png\",\n                tag: `todo-reminder-${todo.id}` // Prevent duplicate notifications\n              });\n            }\n          } catch (e) {\n            console.error(\"Error processing todo due date:\", e);\n          }\n        }\n      });\n    };\n\n    // Check immediately when component mounts\n    checkReminders();\n\n    // Then check every 30 minutes (adjust as needed)\n    const interval = setInterval(checkReminders, 1800000);\n\n    // Cleanup interval on unmount\n    return () => clearInterval(interval);\n  }, [todos]);\n\n  // ✅ Prevent rendering before checking authentication\n  if (isAuthenticated === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ✅ Handle login/logout\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    sessionStorage.setItem(\"user\", JSON.stringify({\n      authenticated: true\n    }));\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setIsAuthenticated(false);\n  };\n\n  // ✅ Create a new todo\n  const createTodo = (title, category, priority, dueDate) => {\n    const newTodo = {\n      id: crypto.randomUUID(),\n      title,\n      completed: false,\n      category,\n      priority,\n      dueDate\n    };\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n\n  // ✅ Remove todo\n  const removeTodo = id => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n\n  // ✅ Modify existing todo\n  const changeTodo = (id, title, category, priority, dueDate, completed) => {\n    const updatedTodo = {\n      id,\n      title,\n      category,\n      priority,\n      dueDate,\n      completed\n    };\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? updatedTodo : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: isAuthenticated ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"header\", {\n              className: \"header\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"headerBlock\",\n                children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                  children: \"My Todos\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleLogout,\n                  className: \"logout-btn\",\n                  children: \"Logout\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"listBlock\",\n              children: /*#__PURE__*/_jsxDEV(TodoList, {\n                todos: todos,\n                removeTodo: removeTodo,\n                changeTodo: changeTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"createBlock\",\n              children: /*#__PURE__*/_jsxDEV(TodoCreate, {\n                createTodo: createTodo\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/signup\",\n          element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/login\",\n          element: /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          element: /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/login\",\n            replace: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"5MOlGk85F/d9H6Q5b9/WYmOYbmg=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useRef","BrowserRouter","Router","Routes","Route","Navigate","Login","Signup","TodoList","TodoCreate","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","todos","setTodos","isAuthenticated","setIsAuthenticated","isFirstRender","storedTodos","localStorage","getItem","storedUser","sessionStorage","parsedTodos","JSON","parse","Array","isArray","console","log","error","current","setItem","stringify","window","Notification","permission","requestPermission","then","checkReminders","now","Date","forEach","todo","completed","dueDate","getTime","title","body","toLocaleString","category","icon","tag","id","e","interval","setInterval","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","handleLogin","authenticated","handleLogout","removeItem","createTodo","priority","newTodo","crypto","randomUUID","prevTodos","removeTodo","filter","changeTodo","updatedTodo","map","path","element","className","onClick","to","replace","onLogin","_c","$RefreshReg$"],"sources":["D:/Downloads/react-todo/src/App.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(null); // Prevent incorrect initial render\n  const isFirstRender = useRef(true);\n\n  // ✅ Load todos and user authentication from localStorage\n  useEffect(() => {\n    const storedTodos = localStorage.getItem(\"todos\");\n    const storedUser = sessionStorage.getItem(\"user\");\n\n    if (storedTodos) {\n      try {\n        const parsedTodos = JSON.parse(storedTodos);\n        if (Array.isArray(parsedTodos)) {\n          setTodos(parsedTodos);\n          console.log(\"Loaded todos:\", parsedTodos);\n        }\n      } catch (error) {\n        console.error(\"Error parsing todos:\", error);\n        setTodos([]);\n      }\n    }\n\n    setIsAuthenticated(!!storedUser);\n  }, []);\n\n  // ✅ Save todos to localStorage (with initial render check)\n  useEffect(() => {\n    if (isFirstRender.current) {\n      isFirstRender.current = false;\n      return;\n    }\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  // ✅ Notifications & Reminders\n  useEffect(() => {\n    // Check if browser supports notifications\n    if (!(\"Notification\" in window)) {\n      console.log(\"This browser does not support desktop notification\");\n      return;\n    }\n\n    // Request permission if not already granted\n    if (Notification.permission !== \"granted\") {\n      Notification.requestPermission().then(permission => {\n        if (permission === \"granted\") {\n          console.log(\"Notification permission granted\");\n        }\n      });\n    }\n\n    const checkReminders = () => {\n      const now = new Date();\n      todos.forEach(todo => {\n        if (!todo.completed && todo.dueDate) {\n          try {\n            const dueDate = new Date(todo.dueDate);\n            // Show notification if task is due within the next hour or is overdue\n            if (dueDate <= new Date(now.getTime() + 3600000)) { // 3600000ms = 1 hour\n              new Notification(`Todo Reminder: ${todo.title}`, {\n                body: `Due: ${dueDate.toLocaleString()}\\nCategory: ${todo.category || 'No category'}`,\n                icon: \"/todo-icon.png\",\n                tag: `todo-reminder-${todo.id}` // Prevent duplicate notifications\n              });\n            }\n          } catch (e) {\n            console.error(\"Error processing todo due date:\", e);\n          }\n        }\n      });\n    };\n\n    // Check immediately when component mounts\n    checkReminders();\n    \n    // Then check every 30 minutes (adjust as needed)\n    const interval = setInterval(checkReminders, 1800000);\n    \n    // Cleanup interval on unmount\n    return () => clearInterval(interval);\n  }, [todos]);\n\n  // ✅ Prevent rendering before checking authentication\n  if (isAuthenticated === null) {\n    return <div>Loading...</div>;\n  }\n\n  // ✅ Handle login/logout\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n    sessionStorage.setItem(\"user\", JSON.stringify({ authenticated: true }));\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    setIsAuthenticated(false);\n  };\n\n  // ✅ Create a new todo\n  const createTodo = (title, category, priority, dueDate) => {\n    const newTodo = {\n      id: crypto.randomUUID(),\n      title,\n      completed: false,\n      category,\n      priority,\n      dueDate,\n    };\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\n  };\n\n  // ✅ Remove todo\n  const removeTodo = (id) => {\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\n  };\n\n  // ✅ Modify existing todo\n  const changeTodo = (id, title, category, priority, dueDate, completed) => {\n    const updatedTodo = { id, title, category, priority, dueDate, completed };\n    setTodos((prevTodos) =>\n      prevTodos.map((todo) => (todo.id === id ? updatedTodo : todo))\n    );\n  };\n\n  return (\n    <Router>\n      <Routes>\n        {isAuthenticated ? (\n          <>\n            <Route\n              path=\"/\"\n              element={\n                <>\n                  <header className=\"header\">\n                    <div className=\"headerBlock\">\n                      <h1>My Todos</h1>\n                      <button onClick={handleLogout} className=\"logout-btn\">Logout</button>\n                    </div>\n                  </header>\n\n                  <div className=\"listBlock\">\n                    <TodoList todos={todos} removeTodo={removeTodo} changeTodo={changeTodo} />\n                  </div>\n\n                  <div className=\"createBlock\">\n                    <TodoCreate createTodo={createTodo} />\n                  </div>\n                </>\n              }\n            />\n            <Route path=\"*\" element={<Navigate to=\"/\" replace />} />\n          </>\n        ) : (\n          <>\n            <Route path=\"/signup\" element={<Signup />} />\n            <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\n            <Route path=\"*\" element={<Navigate to=\"/login\" replace />} />\n          </>\n        )}\n      </Routes>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}