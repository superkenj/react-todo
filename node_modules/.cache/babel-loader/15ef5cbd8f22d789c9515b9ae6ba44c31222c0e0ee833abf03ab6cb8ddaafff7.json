{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\react-todo-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport Signup from \"./components/Signup\";\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AppContent = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const navigate = useNavigate();\n\n  // Load todos and user from localStorage on mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setIsAuthenticated(true);\n    }\n    const storedTodos = localStorage.getItem(\"todos\");\n    if (storedTodos) {\n      setTodos(JSON.parse(storedTodos));\n    }\n  }, []);\n\n  // Save todos to localStorage whenever todos change\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n    console.log(\"Saved todos to localStorage:\", todos); // Debug log\n  }, [todos]);\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n  };\n  const handleLogout = () => {\n    localStorage.removeItem(\"user\");\n    localStorage.removeItem(\"todos\");\n    setIsAuthenticated(false);\n    setTodos([]);\n    navigate(\"/login\");\n  };\n  const createTodo = (title, category, priority, dueDate) => {\n    const newTodo = {\n      id: crypto.randomUUID(),\n      title,\n      completed: false,\n      category,\n      priority,\n      dueDate\n    };\n    setTodos(prevTodos => [...prevTodos, newTodo]);\n  };\n  const removeTodo = id => {\n    setTodos(prevTodos => prevTodos.filter(todo => todo.id !== id));\n  };\n  const changeTodo = (id, title, completed, category, priority, dueDate) => {\n    const updatedTodo = {\n      id,\n      title,\n      completed,\n      category,\n      priority,\n      dueDate\n    };\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? updatedTodo : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/signup\",\n      element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 38\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/login\",\n      element: /*#__PURE__*/_jsxDEV(Login, {\n        onLogin: handleLogin\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: isAuthenticated ? /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"main\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            justifyContent: \"space-between\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Todo Lists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleLogout,\n            style: {\n              padding: \"5px 10px\",\n              cursor: \"pointer\"\n            },\n            children: \"Logout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n          todos: todos,\n          removeTodo: removeTodo,\n          changeTodo: changeTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TodoCreate, {\n          createTodo: createTodo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\",\n        replace: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n// Wrap AppContent with Router\n_s(AppContent, \"9mATOdy2ZMdMEuofvT3aAo34fRk=\", false, function () {\n  return [useNavigate];\n});\n_c = AppContent;\nconst App = () => /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(AppContent, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 101,\n  columnNumber: 3\n}, this);\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppContent\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","useNavigate","Login","Signup","TodoList","TodoCreate","jsxDEV","_jsxDEV","AppContent","_s","todos","setTodos","isAuthenticated","setIsAuthenticated","navigate","storedUser","localStorage","getItem","storedTodos","JSON","parse","setItem","stringify","console","log","handleLogin","handleLogout","removeItem","createTodo","title","category","priority","dueDate","newTodo","id","crypto","randomUUID","completed","prevTodos","removeTodo","filter","todo","changeTodo","updatedTodo","map","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","className","style","display","justifyContent","alignItems","onClick","padding","cursor","to","replace","_c","App","_c2","$RefreshReg$"],"sources":["D:/Downloads/react-todo-main/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate, useNavigate } from \"react-router-dom\";\r\nimport Login from \"./components/Login\";\r\nimport Signup from \"./components/Signup\";\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoCreate from \"./components/TodoCreate\";\r\nimport \"./App.css\";\r\n\r\nconst AppContent = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Load todos and user from localStorage on mount\r\n  useEffect(() => {\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      setIsAuthenticated(true);\r\n    }\r\n\r\n    const storedTodos = localStorage.getItem(\"todos\");\r\n    if (storedTodos) {\r\n      setTodos(JSON.parse(storedTodos));\r\n    }\r\n  }, []);\r\n\r\n  // Save todos to localStorage whenever todos change\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  }, [todos]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n    console.log(\"Saved todos to localStorage:\", todos);  // Debug log\r\n  }, [todos]);  \r\n\r\n  const handleLogin = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem(\"user\");\r\n    localStorage.removeItem(\"todos\");\r\n    setIsAuthenticated(false);\r\n    setTodos([]);\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  const createTodo = (title, category, priority, dueDate) => {\r\n    const newTodo = {\r\n      id: crypto.randomUUID(),\r\n      title,\r\n      completed: false,\r\n      category,\r\n      priority,\r\n      dueDate,\r\n    };\r\n    setTodos((prevTodos) => [...prevTodos, newTodo]);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    setTodos((prevTodos) => prevTodos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const changeTodo = (id, title, completed, category, priority, dueDate) => {\r\n    const updatedTodo = { id, title, completed, category, priority, dueDate };\r\n    setTodos((prevTodos) =>\r\n      prevTodos.map((todo) => (todo.id === id ? updatedTodo : todo))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path=\"/signup\" element={<Signup />} />\r\n      <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n      <Route\r\n        path=\"/\"\r\n        element={\r\n          isAuthenticated ? (\r\n            <main className=\"main\">\r\n              <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\" }}>\r\n                <h1>My Todo Lists</h1>\r\n                <button onClick={handleLogout} style={{ padding: \"5px 10px\", cursor: \"pointer\" }}>\r\n                  Logout\r\n                </button>\r\n              </div>\r\n              <TodoList todos={todos} removeTodo={removeTodo} changeTodo={changeTodo} />\r\n              <TodoCreate createTodo={createTodo} />\r\n            </main>\r\n          ) : (\r\n            <Navigate to=\"/login\" replace />\r\n          )\r\n        }\r\n      />\r\n    </Routes>\r\n  );\r\n};\r\n\r\n// Wrap AppContent with Router\r\nconst App = () => (\r\n  <Router>\r\n    <AppContent />\r\n  </Router>\r\n);\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}