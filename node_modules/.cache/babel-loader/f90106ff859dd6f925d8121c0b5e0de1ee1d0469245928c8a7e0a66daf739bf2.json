{"ast":null,"code":"var _jsxFileName = \"D:\\\\Downloads\\\\react-todo-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport Login from \"./components/Login\"; // Ensure correct import\nimport Signup from \"./components/Signup\"; // Import Signup component\nimport TodoList from \"./components/TodoList\";\nimport TodoCreate from \"./components/TodoCreate\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    // Check if user is already authenticated on app load\n    // This effect runs once when the component mounts\n    const storedUser = localStorage.getItem(\"user\");\n    if (storedUser) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const handleLogin = () => {\n    setIsAuthenticated(true);\n  };\n  const createTodo = (title, category, priority, dueDate) => {\n    const newTodo = {\n      id: crypto.randomUUID(),\n      title,\n      completed: false,\n      category,\n      priority,\n      dueDate\n    };\n    setTodos([...todos, newTodo]);\n  };\n  const removeTodo = id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  };\n  const changeTodo = (id, title, completed, category, priority, dueDate) => {\n    const updatedTodo = {\n      id,\n      title,\n      completed,\n      category,\n      priority,\n      dueDate\n    };\n    setTodos(prevTodos => prevTodos.map(todo => todo.id === id ? updatedTodo : todo));\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/signup\",\n        element: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: isAuthenticated ? /*#__PURE__*/_jsxDEV(\"main\", {\n          className: \"main\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"My Todo Lists\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n            todos: todos,\n            removeTodo: removeTodo,\n            changeTodo: changeTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(TodoCreate, {\n            createTodo: createTodo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Login, {\n          onLogin: handleLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"O0caDeeHnqQPpIFXoyEM84z3YMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","BrowserRouter","Router","Routes","Route","Navigate","Login","Signup","TodoList","TodoCreate","jsxDEV","_jsxDEV","App","_s","todos","setTodos","isAuthenticated","setIsAuthenticated","storedUser","localStorage","getItem","handleLogin","createTodo","title","category","priority","dueDate","newTodo","id","crypto","randomUUID","completed","removeTodo","filter","todo","changeTodo","updatedTodo","prevTodos","map","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onLogin","className","_c","$RefreshReg$"],"sources":["D:/Downloads/react-todo-main/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\r\nimport Login from \"./components/Login\"; // Ensure correct import\r\nimport Signup from \"./components/Signup\"; // Import Signup component\r\nimport TodoList from \"./components/TodoList\";\r\nimport TodoCreate from \"./components/TodoCreate\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [todos, setTodos] = useState([]);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Check if user is already authenticated on app load\r\n    // This effect runs once when the component mounts\r\n    const storedUser = localStorage.getItem(\"user\")\r\n    if (storedUser) {\r\n      setIsAuthenticated(true)\r\n    }\r\n  }, [])\r\n\r\n  const handleLogin = () => {\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const createTodo = (title, category, priority, dueDate) => {\r\n    const newTodo = {\r\n      id: crypto.randomUUID(),\r\n      title,\r\n      completed: false,\r\n      category,\r\n      priority,\r\n      dueDate,\r\n    };\r\n    setTodos([...todos, newTodo]);\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    setTodos(todos.filter((todo) => todo.id !== id));\r\n  };\r\n\r\n  const changeTodo = (id, title, completed, category, priority, dueDate) => {\r\n    const updatedTodo = { id, title, completed, category, priority, dueDate };\r\n    setTodos((prevTodos) =>\r\n      prevTodos.map((todo) => (todo.id === id ? updatedTodo : todo))\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n      <Routes>\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n        <Route path=\"/login\" element={<Login onLogin={handleLogin} />} />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            isAuthenticated ? (\r\n              <main className=\"main\">\r\n                <h1>My Todo Lists</h1>\r\n                <TodoList todos={todos} removeTodo={removeTodo} changeTodo={changeTodo} />\r\n                <TodoCreate createTodo={createTodo} />\r\n              </main>\r\n            ) : (\r\n              <Login onLogin={handleLogin} />\r\n            )\r\n          }\r\n        />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}